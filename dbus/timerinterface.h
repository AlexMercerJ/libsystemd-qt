/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -m -i generic-types.h -p timerinterface /home/ndr/projects/libsystemd-qt/dbus/introspection/org.freedesktop.systemd1.Timer.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef TIMERINTERFACE_H_1364660948
#define TIMERINTERFACE_H_1364660948

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "generic-types.h"

/*
 * Proxy class for interface org.freedesktop.systemd1.Timer
 */
class OrgFreedesktopSystemd1TimerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.systemd1.Timer"; }

public:
    OrgFreedesktopSystemd1TimerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopSystemd1TimerInterface();

    Q_PROPERTY(qulonglong NextElapseUSecMonotonic READ nextElapseUSecMonotonic)
    inline qulonglong nextElapseUSecMonotonic() const
    { return qvariant_cast< qulonglong >(property("NextElapseUSecMonotonic")); }

    Q_PROPERTY(qulonglong NextElapseUSecRealtime READ nextElapseUSecRealtime)
    inline qulonglong nextElapseUSecRealtime() const
    { return qvariant_cast< qulonglong >(property("NextElapseUSecRealtime")); }

    Q_PROPERTY(QString Result READ result)
    inline QString result() const
    { return qvariant_cast< QString >(property("Result")); }

    Q_PROPERTY(TimerDBusCalendarTimer TimersCalendar READ timersCalendar)
    inline TimerDBusCalendarTimer timersCalendar() const
    { return qvariant_cast< TimerDBusCalendarTimer >(property("TimersCalendar")); }

    Q_PROPERTY(TimerDBusMonotonicTimer TimersMonotonic READ timersMonotonic)
    inline TimerDBusMonotonicTimer timersMonotonic() const
    { return qvariant_cast< TimerDBusMonotonicTimer >(property("TimersMonotonic")); }

    Q_PROPERTY(QString Unit READ unit)
    inline QString unit() const
    { return qvariant_cast< QString >(property("Unit")); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
};

#endif
